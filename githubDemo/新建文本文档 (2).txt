1.ajax请求的时候get和post方式的区别
  get一般用于查询操作，url地址有长度限制，请求的参数都暴露于url地址当中，如果传递的是
  中文的话，需要自己进行解码编译，安全性能较低。
  post一般用于提交数据，没有长度限制，提交的数据内容都存在于http请求中，数据不会暴露在
  url地址中，安全性能较高。
2.浏览器内核
    IE浏览器：trident内核
    Firefox浏览器：gecko内核
    Safari浏览器：webkit内核
    opera浏览器：以前是presto内核，现在改用Blink内核
    chrome浏览器：Blink内核
3.div+css的布局较table布局有什么优点？
   改版的时候只需要改css文件
   页面加载速度更快、结构化清晰、页面显示更加简洁
   表现与结构相分离
   易于优化搜索引擎更加友好，排名更容易靠前
4.img的alt与title有何异同？ strong与em的异同？
    alt:替换指定文字，不能显示图像
    title：该属性为设置属性的元素提供建议性的信息
    strong：粗体强调标签，强调，表示内容的重要性
    em：斜体强调标签，更加强烈强调，表示内容的强调点
5.你能描述一下渐进增强和优雅降级之间的不同吗?
     渐进增强：针对低版本浏览器进行构建页面，保证最基本的功能，然后再针对高级浏览器进行
     效果、交互等改进和追加的功能，已达到更好的用户体验
     优雅降级：一开始就构建完整的功能，然后再针对低版本浏览器进行兼容
     区别：
       优雅降级是从复杂的现状开始，并试图减少用户体验的供给，而渐进增强则是从最基础
       ，能够起作用的版本开始，并不断地扩充，以适应未来的环境的需要。降级意味着往回看，
      而增强意味着朝前看，同时保证其根基处于安全地带。
6.在css/js代码上线之后开发人员经常会优化性能，从用户刷新网页开始，
一次js请求一般情况下有哪些地方会有缓存处理？
    DNS缓存，cdn缓存， 浏览器缓存，服务器缓存
7.一个页面上有大量的图片（大型电商网站），加载很慢，你有哪些方法优化这些图片的加载，
给用户更好的体验。   

   图片懒加载，在页面上的未可视区域可以添加一个滚动条事件，判断图片位置与浏览器顶端
   的距离与页面的距离，如果前者小于后者，优先加载
   如果为幻灯片、相册等，可以使用图片预加载技术，将当前展示图片的前一张和后一张优先加载
   如果为css图片，可以使用cssprite技术等
   如果图片过大，可以使用特殊编码的图片，加载时会预先加载一张压缩的特别厉害的缩略图，
   以提高用户体验
   如果图片展示区域小于图片的真实大小，则因在服务器端根据业务需要先进行图片压缩，
   图片压缩后与展示大小一致
   
8.创建一个ajax的基本步骤
      (1)创建XMLHttpRequest对象,也就是创建一个异步调用对象.

      (2)创建一个新的HTTP请求,并指定该HTTP请求的方法、URL及验证信息.

      (3)设置响应HTTP请求状态变化的函数.

      (4)发送HTTP请求.

      (5)获取异步调用返回的数据.

      (6)使用JavaScript和DOM实现局部刷新.
     var xmlHttpRequest;  //定义一个变量,用于存放XMLHttpRequest对象

                                function createXMLHttpRequest()    //创建XMLHttpRequest对象的方法

                               {

                                         if(window.ActiveXObject)   //判断是否是IE浏览器

                                        {

                                                  xmlHttpRequest = new ActiveXObject("Microsoft.XMLHTTP");  //创建IE浏览器中的XMLHttpRequest对象

                                        }

                                        else if(window.XMLHttpRequest)    //判断是否是Netscape等其他支持XMLHttpRequest组件的浏览器

                                        {

                                        xmlHttpRequest = new XMLHttpRequest();  //创建其他浏览器上的XMLHttpRequest对象

                                         }

                               }
9.